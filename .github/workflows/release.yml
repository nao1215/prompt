name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Extract changelog for this version
        id: changelog
        run: |
          # Extract the current version's changelog
          TAG="${{ steps.tag.outputs.TAG_NAME }}"
          TAG_WITHOUT_V="${TAG#v}"
          
          # Create a temporary file for the changelog content
          CHANGELOG_FILE="changelog_content.md"
          
          # Extract content between the current version and the next version header
          # This handles different possible formats: ## [x.y.z], ## x.y.z, ### [x.y.z], ### x.y.z
          awk -v ver="$TAG_WITHOUT_V" '
            BEGIN { found = 0; }
            $0 ~ "^#{2,3} \\[?" ver "\\]?" { found = 1; next; }
            /^#{2,3} \[?[0-9]+\.[0-9]+\.[0-9]+\]?/ { if (found) exit; }
            found { print; }
          ' CHANGELOG.md > "$CHANGELOG_FILE"
          
          # If no content found with version without 'v', try with 'v'
          if [ ! -s "$CHANGELOG_FILE" ]; then
            awk -v ver="$TAG" '
              BEGIN { found = 0; }
              $0 ~ "^#{2,3} \\[?" ver "\\]?" { found = 1; next; }
              /^#{2,3} \[?v?[0-9]+\.[0-9]+\.[0-9]+\]?/ { if (found) exit; }
              found { print; }
            ' CHANGELOG.md > "$CHANGELOG_FILE"
          fi
          
          # If still no content, use a default message
          if [ ! -s "$CHANGELOG_FILE" ]; then
            echo "No changelog entry found for version $TAG" > "$CHANGELOG_FILE"
            echo ""
            echo "Please check CHANGELOG.md for updates." >> "$CHANGELOG_FILE"
          fi
          
          # Set the output
          {
            echo 'CHANGELOG_CONTENT<<EOF'
            cat "$CHANGELOG_FILE"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          name: ${{ steps.tag.outputs.TAG_NAME }}
          body: ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.TAG_NAME, '-alpha') || contains(steps.tag.outputs.TAG_NAME, '-beta') || contains(steps.tag.outputs.TAG_NAME, '-rc') }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}